{"componentChunkName":"component---src-templates-post-template-js","path":"/java-annotated-featured-content/","result":{"data":{"post":{"id":"74ed402f-f892-5f45-ac9d-b546cf17a888","html":"<p>I’m a <a href=\"https://www.jetbrains.com/lp/jetbrains-community-contributor/\">JetBrains Community Contributor</a>, and I was honoured to be invited to provide featured content for the <a href=\"https://www.jetbrains.com/lp/jam/\">Java Annotated</a> newsletter. A week before it was due, I had a blank page. And then the day before it was due, I had a blank page. The day it was due, I had been thinking really hard, and had … a blank page with a few scraps of links. So I continued working on it. At some point, near the end of the day it was due, I reached out to the JetBrains team to ask how long it should be. “Oh, a paragraph or two” was the answer. “So, uh, eight paragraphs would be too much?” Yes. Yes, it seemed it would. Apparently, that’s what my own blog is for.</p>\n<p>So, because I don’t like throwing things out, please enjoy the full, with-lots-of-extra-thoughts, version of the Java Annotated Monthly Featured content. Or, if you prefer the short version, it’s coming soon <a href=\"https://blog.jetbrains.com/idea/2024/04/java-annotated-monthly-may-2024/\">on the JetBrains site</a>.</p>\n<p>This past month, I’ve been enjoying the new <a href=\"https://www.jetbrains.com/help/idea/full-line-code-completion.html\">full line code completion</a>. There’s a lot of things to like about it; the feature is included in my existing IntelliJ IDEA Ultimate subscription, it runs locally, is privacy-friendly, is integrated into my existing tools, and it solves a real problem (typing is boring).</p>\n<p>We’re in the midst of a full-on AI hype cycle at the moment. Last summer, Gartner announced that <a href=\"https://web.archive.org/web/20230816114302/https://www.gartner.com/en/newsroom/press-releases/2023-08-16-gartner-places-generative-ai-on-the-peak-of-inflated-expectations-on-the-2023-hype-cycle-for-emerging-technologies\">we had reached the peak of inflated expectations</a>. Right now, many of us are flip-flopping back and forth between excitement and cynicism as we slide back down the hype curve. The potential of these tools is enormous, but so many of them promise a lot, and deliver … errors. And, if you look at the actual cost of training and running the larger models, it’s eye-wateringly, jaw-droppingly, horrifyingly, enormous.</p>\n<p>There’s another problem with AI, which affects me personally. AI development all about Python, and I just don’t do Python. I’ve been a Java developer my whole career, and I quite like the idea of keeping it that way. If Python is the language of AI, does that mean us Java developers can ignore AI until we reach the trough of disillusionment, and after that don’t need to worry about it any more? Does it mean us Java developers are <em>excluded</em> from AI, whether we like it or not?</p>\n<p>No. AI isn’t going away, but we’re starting to get a better understanding of where it’s useful and where it isn’t. Molly White, of <a href=\"https://www.web3isgoinggreat.com/\">web3isgoinggreat</a> fame, has just published a fantastic piece called <a href=\"https://www.citationneeded.news/ai-isnt-useless/\">“AI Isn’t Useless”</a>. I also wrote on my blog last month about the big question of <a href=\"https://hollycummins.com/will-ai-take-our-jobs/\">whether AI will take developer jobs</a>.</p>\n<p>And AI is opening up to Java developers. This isn’t just AI-powered Java coding assistants; us Java developers can now <em>create</em> AI tools. <a href=\"https://github.com/langchain4j/langchain4j\">LangChain4j</a> simplifies integrating machine learning into Java applications. The Quarkus team have applied the Quarkus principle of <a href=\"https://quarkus.io/developer-joy/\">developer joy</a> to their <a href=\"https://quarkus.io/blog/quarkus-meets-langchain4j/\">Langchain4j integration</a>, so it’s really nice. Last month, they released an <a href=\"https://docs.quarkiverse.io/quarkus-langchain4j/dev/easy-rag.html\">Easy RAG</a> extension, which allows you to set up a Retrieval Augmented Generation (RAG) application with just a single piece of configuration. You tell the <code class=\"language-text\">easy-rag</code> extension what directory your documents (PDF, Word files, etc) are in, and it will ingest them, decode them, and use them to teach itself. This makes it way more useful than a generic LLM, because it means the model has knowledge of the domain-specific things that you care about. I chat to some of my Quarkus colleagues about the Quarkus + LangChain4j in <a href=\"https://www.youtube.com/watch?v=EeR_8HMFwN4\">the latest episode of Quarkus Insights</a>.</p>\n<p>Another course-correction that I’m excited about is the revival of symbolic reasoning (that is, rules). We’re going to start talking more about combining large language models with symbolic reasoning. Rules engines are cheap to execute, easier to reason about, and reassuringly correct. Mario Fusco did a talk at Devoxx Greece about how LLMs and symbolic reasoning are complementary. The video isn’t out yet, although it might have appeared on <a href=\"https://www.youtube.com/@DevoxxForever\">the Devoxx YouTube channel</a> by the time you read this. In the meantime, he’s prepared several sample applications, including <a href=\"https://github.com/mariofusco/quarkus-drools-llm?tab=readme-ov-file#the-airline-chatbot-example\">an airline chatbot</a>. He’s also got nice explanation of why symbolic reasoning is important in the <a href=\"https://github.com/mariofusco/quarkus-drools-llm\">readme</a>. I think we’ll be seeing more of this kind of hybrid approach in the future, as our industry matures in how we use LLMs.</p>\n<p>Being able to leverage AI from Java is important, because Java is getting better and better. One JVM improvement I’m excited about is project Leyden. Leyden isn’t news, but we’re seeing a nice stream of news and JEPs. Per-Åke Minborg from Oracle gave a nice Leyden updateat this year’s Jfokus. Both the <a href=\"https://www.jfokus.se/jfokus24-preso/Project-Leyden--Capturing-Lightning-in-a-Bottle.pdf\">slides</a> and <a href=\"https://www.youtube.com/watch?v=CeO9RaJhjxg\">video</a> are now available.</p>\n<p>Leyden is part of a general movement to make Java start faster and run leaner. Historically, JVMs were optimised for dynamism. You could completely change the behaviour and dependencies of your application without stopping it. This is very clever engineering, but dynamism has a cost, and a highly dynamic runtime in a container is pointless. Even outside a container, realistically, most of us would (and should!) prefer to manage production updates through a CI/CD pipeline rather than patches to a live server. The good news is that Java is evolving, to reduce repeated work and unecessary classloading. Leyden is part of a bigger (and exciting!) trend of technologies to make Java start faster and run leaner, which also includes GraalVM, CRaC, and <a href=\"http://quarkus.io\">Quarkus</a>.</p>","excerpt":"I’m a JetBrains Community Contributor, and I was honoured to be invited to provide featured content for the Java Annotated newsletter. A…","fields":{"title":"Java Annoted Featured Content – The Long Version","slug":"/java-annotated-featured-content/","prefix":"2024-05-01","shortDate":"05-01","category":"java","author":"holly cummins","displayCategory":"java","geography":null,"video":null,"slides":null,"oembeds":null,"cover":{"childImageSharp":{"resize":{"src":"/static/a8ac317414506bc159e2acfc62dc028f/9dc27/java-annotated-page.jpg"}}}},"frontmatter":{"type":"blog","event":null,"keynote":null,"code":null,"resources":null}},"authornote":{"id":"77e0dd69-1df1-59df-9a8e-f3f29c267627","html":"<p><strong>Holly Cummins</strong>. Holly Cummins is a Senior Principal Software Engineer at Red Hat, in the Quarkus Team. She is a\nkeynote speaker, author, and bad illustrator.</p>"}},"pageContext":{"slug":"/java-annotated-featured-content/","prev":{"id":"714b64a9-ed81-593a-90eb-a46491ab0a16","fields":{"slug":"/quarkus-efficiency-qcon/","prefix":"2024-04-09","draft":null,"source":"talks","category":"sustainability"},"frontmatter":{"title":"Zero Waste, Radical Magic, and Italian Graft – Quarkus Efficiency Secrets","url":null,"type":"talk"}},"next":{"id":"22766b0d-bbb7-5869-9327-b9e82d2f2840","fields":{"slug":"/rockstar-devoxx/","prefix":"2024-05-08","draft":null,"source":"talks","category":"quarkus"},"frontmatter":{"title":"Six things we learned implementing Rockstar on Quarkus","url":null,"type":"talk"}},"source":"posts"}},"staticQueryHashes":["1862184931","421231837","835725211"]}